Index: OOP23_Food Ordering System/src/project/main/main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package project.main;\r\n\r\nimport project.cart.cart;\r\nimport project.menu.Menu;\r\nimport project.admin.Admin;\r\nimport project.user.User;\r\nimport project.user.UserManagementSystem;\r\n\r\nimport java.awt.*;\r\nimport java.util.Scanner;\r\nimport java.io.IOException;\r\n\r\npublic class main\r\n{\r\n    /*public static void main(String[] args)\r\n    {\r\n        UserManagementSystem.readUserDataFile();\r\n\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n        String userEmail = null;\r\n\r\n\r\n        do\r\n        {\r\n            System.out.println(\"\\t####### Food Ordering System #######\\n\");\r\n            System.out.println(\"\\t\\t\\t\\t Welcome!\\n\");\r\n            System.out.println(\"Do you already have an account? Enter Yes or No\\n\" +\r\n                    \"Type exit to close program.\");\r\n\r\n            String isUserCheck = scanner.nextLine();\r\n\r\n\r\n            if (isUserCheck.equalsIgnoreCase(\"yes\")\r\n                    || isUserCheck.equalsIgnoreCase(\"y\"))\r\n            {\r\n                String retry;\r\n                do\r\n                {\r\n                    retry = \"n\";\r\n                    if ( (userEmail=UserManagementSystem.loginUser()).equals(\"null\"))\r\n                    {\r\n                        System.out.println(\"Would you like to retry?(Y/N)\");\r\n                        retry = scanner.nextLine();\r\n                    }\r\n                    //prompts user to retry if they entered wrong credentials\r\n                } while (retry.equalsIgnoreCase(\"y\")\r\n                        || retry.equalsIgnoreCase(\"yes\"));\r\n\r\n            } else if (isUserCheck.equalsIgnoreCase(\"no\")\r\n                    || isUserCheck.equalsIgnoreCase(\"n\"))\r\n            {\r\n\r\n                UserManagementSystem.registerUser(1);\r\n            }\r\n            else if(isUserCheck.equalsIgnoreCase(\"exit\"))\r\n            {\r\n                System.exit(0);\r\n            }\r\n            else\r\n            {\r\n                System.out.println(\"Invalid Input\");\r\n            }\r\n        }while(Role.getRoleIdentifier() == 0);\r\n\r\n\r\n        switch (Role.getRoleIdentifier())\r\n        {\r\n            case Role.ADMIN_IDENTIFIER:\r\n                adminLaunchProgram();\r\n                break;\r\n            case Role.RESTAURANT_IDENTIFIER:\r\n                //restaurantLaunchProgram();\r\n                break;\r\n            case Role.USER_IDENTIFIER:\r\n                userLaunchProgram(userEmail);\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //function to handle program flow after user logs in, should display restaurants, menus,etc..\r\n    public static void userLaunchProgram(String userEmail)\r\n    {\r\n        User loggedInUser = UserManagementSystem.getUserByEmail(userEmail);\r\n\r\n        //if somehow the user doesn't exist (after multiple checks), we should terminate the program\r\n        if (loggedInUser != null)\r\n        {\r\n            System.out.println(\"\\n\\t\\tWelcome \" + loggedInUser.getName() + \"!\");\r\n            System.out.println(\"Restaurants Near You:\");\r\n            //displayRestaurants();\r\n            //chooseRestaurant();\r\n            //displayMenu();\r\n            //addToCart();\r\n            //orderProcessing();\r\n            //paymentProcessing();\r\n            //orderTracking();\r\n            //reviewProcessing();\r\n            // loop\r\n\r\n        }\r\n        else\r\n        {\r\n            System.out.println(\"USER DOESN'T EXIST!\");\r\n            System.exit(-1);\r\n        }\r\n    }\r\n\r\n\r\n    //function that handles program flow after a system administrator logs in\r\n    public static void adminLaunchProgram()\r\n    {\r\n        User admin = new Admin();\r\n        Admin sysAdmin = (Admin) admin;\r\n\r\n        sysAdmin.runDashboard();\r\n    }*/\r\n    public static void main(String[] args) {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        // Sample user\r\n        //User user = new User(\"john_doe\", \"password123\");\r\n\r\n        // Create menu\r\n        Menu menu = new Menu();\r\n\r\n        // Load menu from file\r\n        try {\r\n            menu.loadMenuFromFile(\"Menu.txt\");\r\n        } catch (IOException e) {\r\n            System.err.println(\"Error loading menu from file: \" + e.getMessage());\r\n            System.exit(1);\r\n        }\r\n\r\n        // Sample food order\r\n        cart order = new cart();\r\n\r\n        // Display the menu\r\n        menu.displayMenu();\r\n\r\n        // User interaction\r\n        System.out.print(\"Enter the item number to add to the cart (0 to finish): \");\r\n        int choice;\r\n        while ((choice = scanner.nextInt()) != 0) {\r\n            if (choice > 0 && choice <= menu.getMenuSize()) {\r\n                order.addItem(menu.getMenuItem(choice - 1));\r\n            } else {\r\n                System.out.println(\"Invalid choice. Try again.\");\r\n            }\r\n            System.out.print(\"Enter the item number to add to the cart (0 to finish): \");\r\n        }\r\n\r\n        // Display the order\r\n        order.displayCart();\r\n        System.out.println(\"Total: $\" + order.calculateTotal());\r\n\r\n        // Close the scanner\r\n        scanner.close();\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/OOP23_Food Ordering System/src/project/main/main.java b/OOP23_Food Ordering System/src/project/main/main.java
--- a/OOP23_Food Ordering System/src/project/main/main.java	(revision ba1c71f4b9e167c977dbcfbbe498cd1c5b8ea0ab)
+++ b/OOP23_Food Ordering System/src/project/main/main.java	(date 1702997276657)
@@ -128,7 +128,7 @@
 
         // Load menu from file
         try {
-            menu.loadMenuFromFile("Menu.txt");
+            menu.loadMenuFromFile("C:\\Users\\Nader\\Documents\\GitHub\\Food-Ordering-System\\OOP23_Food Ordering System\\Menu.txt");
         } catch (IOException e) {
             System.err.println("Error loading menu from file: " + e.getMessage());
             System.exit(1);
